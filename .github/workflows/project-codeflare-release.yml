# This workflow will build and release all components of the CodeFlare project

name: Project CodeFlare Release
on:
  workflow_dispatch:
    inputs:
      operator-version:
        description: 'CodeFlare operator version to be released (for example: v0.0.0)'
        required: true
      replaces:
        description: 'The previous operator semantic version that this release replaces (for example: v0.0.0)'
        required: true
      mcad-version:
        description: 'Version of multi-cluster-app-dispatcher to be released (for example: v0.0.0)'
        required: true
      codeflare-sdk-version:
        description: 'Version of CodeFlare-SDK to be released (for example: v0.0.0)'
        required: true
      instascale-version:
        description: 'Version of InstaScale to be released (for example: v0.0.0)'
        required: true
      kuberay-version:
        description: 'Tested version of KubeRay (for example: v0.0.0)'
        required: true
      is-stable:
        description: 'Select if the built images should be tagged as stable'
        required: true
        type: boolean
      codeflare-repository-organization:
        description: 'GitHub organization/user containing repositories used for release'
        required: true
        default: 'project-codeflare'
      quay-organization:
        description: 'Quay organization used to push the built images to'
        required: true
        default: 'project-codeflare'
      community-operators-prod-organization:
        description: 'Owner of target community-operators-prod repository used to open a PR against'
        required: true
        default: 'redhat-openshift-ecosystem'

jobs:
  release-parameters:
    runs-on: ubuntu-latest
    steps:
    - name: Release Parameters
      run: |
        echo "Below are the release parameters set for the workflow:"
        echo "Operator Version: ${{ github.event.inputs.operator-version }}"
        echo "Replaces: ${{ github.event.inputs.replaces }}"
        echo "MCAD Version: ${{ github.event.inputs.mcad-version }}"
        echo "CodeFlare SDK Version: ${{ github.event.inputs.codeflare-sdk-version }}"
        echo "InstaScale Version: ${{ github.event.inputs.instascale-version }}"
        echo "Is Stable: ${{ github.event.inputs.is-stable }}"
        echo "CodeFlare Repository Organization: ${{ github.event.inputs.codeflare-repository-organization }}"
        echo "Quay Organization: ${{ github.event.inputs.quay-organization }}"
        echo "Community Operators Prod Organization: ${{ github.event.inputs.community-operators-prod-organization }}"

  release-codeflare-operator:
    runs-on: ubuntu-latest

    steps:
    - name: Release CodeFlare operator
      run: |
        gh workflow run tag-and-build.yml --repo ${{ github.event.inputs.codeflare-repository-organization }}/codeflare-operator --ref ${{ github.ref }} --field is-stable=${{ github.event.inputs.is-stable }} --field version=${{ github.event.inputs.operator-version }} --field replaces=${{ github.event.inputs.replaces }} --field mcad-version=${{ github.event.inputs.mcad-version }} --field codeflare-sdk-version=${{ github.event.inputs.codeflare-sdk-version }} --field instascale-version=${{ github.event.inputs.instascale-version }} --field kuberay-version=${{ github.event.inputs.kuberay-version }} --field quay-organization=${{ github.event.inputs.quay-organization }} --field community-operators-prod-fork-organization=${{ github.event.inputs.codeflare-repository-organization }} --field community-operators-prod-organization=${{ github.event.inputs.community-operators-prod-organization }}
      env:
        GITHUB_TOKEN: ${{ secrets.CODEFLARE_MACHINE_ACCOUNT_TOKEN }}
      shell: bash

    - name: Wait for CodeFlare operator run to finish
      run: |
        # wait for a while for Run to be started
        sleep 5
        run_id=$(gh run list --workflow tag-and-build.yml --repo ${{ github.event.inputs.codeflare-repository-organization }}/codeflare-operator --limit 1 --json databaseId --jq .[].databaseId)
        gh run watch ${run_id} --repo ${{ github.event.inputs.codeflare-repository-organization }}/codeflare-operator --interval 10 --exit-status
      env:
        GITHUB_TOKEN: ${{ secrets.CODEFLARE_MACHINE_ACCOUNT_TOKEN }}
      shell: bash
